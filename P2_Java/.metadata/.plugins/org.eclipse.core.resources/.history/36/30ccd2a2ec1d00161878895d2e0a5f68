package ch.hearc.p2.game.state;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.Image;
import org.newdawn.slick.Input;
import org.newdawn.slick.Music;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.Sound;
import org.newdawn.slick.state.BasicGameState;
import org.newdawn.slick.state.StateBasedGame;
import org.newdawn.slick.state.transition.FadeInTransition;
import org.newdawn.slick.state.transition.FadeOutTransition;

import ch.hearc.p2.game.WindowGame;
import ch.hearc.p2.game.character.Abeille;
import ch.hearc.p2.game.character.Bat;
import ch.hearc.p2.game.character.Character;
import ch.hearc.p2.game.character.Ennemie;
import ch.hearc.p2.game.character.Player;
import ch.hearc.p2.game.character.Spider;
import ch.hearc.p2.game.controller.MouseAndKeyBoardPlayerController;
import ch.hearc.p2.game.controller.PlayerController;
import ch.hearc.p2.game.hud.Hud;
import ch.hearc.p2.game.level.Level;
import ch.hearc.p2.game.level.LevelObject;
import ch.hearc.p2.game.level.object.Coin;
import ch.hearc.p2.game.level.object.Key;
import ch.hearc.p2.game.level.object.Objective;
import ch.hearc.p2.game.menu.PauseGameState;
import ch.hearc.p2.game.physics.Physics;
import ch.hearc.p2.game.weapon.Weapon;

public class Level2 extends LevelState {
 

    public static final int ID = 102;

    public Level2(String startingLevel) {
	super(startingLevel);
	this.startinglevel = startingLevel;
	
    }

    public void instanciation() throws SlickException {
  	// ID for the next state (0 is main menu, ID+1 is the next level)
	nextLevel = 0;
	
	player = new Player(1 * 70, 16 * 70);
	
	// Remplis ennemis
	ennemies.add(new Bat(7 * 70, 3 * 70));
	ennemies.add(new Bat(2 * 70, 8 * 70));
	ennemies.add(new Bat(26 * 70, 2 * 70));
	ennemies.add(new Bat(7 * 70, 14 * 70));
	ennemies.add(new Spider(15 * 70, 17 * 70));

	// Remplis Objectifs
	objectives.add(new Coin(25 * 70, 2 * 70));
	objectives.add(new Coin(2 * 70, 10 * 70));
	objectives.add(new Coin(47 * 70, 6 * 70));
	objectives.add(new Coin(35 * 70, 14 * 70));
	objectives.add(new Key(43 * 70, 2 * 70));
  	
  	//setup music (si rien, on garde la même musique qu'au niveau d'avant
  	//musiclvl = new Music("ressources/audio/music/lvl1.ogg");
  	
  	initialisationSuite();
  	
      }

}