package ch.hearc.p2.game.weapon;

import java.util.LinkedList;
import java.util.List;

import org.newdawn.slick.Animation;
import org.newdawn.slick.Image;
import org.newdawn.slick.SlickException;

import ch.hearc.p2.game.level.LevelObject;
import ch.hearc.p2.game.physics.AABoundingRect;
import ch.hearc.p2.game.projectile.Projectile;
import ch.hearc.p2.game.projectile.ProjectilePlayer;

public class Weapon extends LevelObject {

    private List<LevelObject> toAddList = new LinkedList<LevelObject>();
    protected Animation animation;
    private int munition;

    public Weapon(float x, float y, int mun) throws SlickException {
	super(x, y);
	munition = mun;
	x_velocity = 0;
	y_velocity = 0;

	animation = new Animation(
		new Image[] { new Image("ressources/map/tuiles/platformerGraphicsDeluxe_Updated/Tiles/raygunBig.png") },
		125);
	boundingShape = new AABoundingRect(x, y, 0, 0);
	maximumFallSpeed = (float) 0;
    }

    public void render(float offset_x, float offset_y) {
	animation.draw(x - 2 - offset_x, y - 2 - offset_y);
    }

    public void shoot(float playerX, float playerY, int mouseX, int mouseY) throws SlickException {
	if (munition > 0) {
	    //Calcul de la vélocité X et Y
	    float velocityX = 2;
	    float velocityY = 2;
	    double angle = Math.tan(Math.abs(mouseY-playerY) / Math.abs(mouseX - playerX));
	    toAddList.add(new ProjectilePlayer(x + 10, y, velocityX, velocityY));
	    munition--;
	}
    }

    public List<LevelObject> getToAddList() {
	return toAddList;
    }

    public void clearList() {
	toAddList.clear();
    }
    public int getMunition()
    {
	return munition;
    }
}
