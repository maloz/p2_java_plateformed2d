package ch.hearc.p2.game.menu;

import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.Image;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.state.BasicGameState;
import org.newdawn.slick.state.StateBasedGame;

import net.java.games.input.Component.Identifier.Button;

public class LevelScreenGameState extends BasicGameState {

	public static final int ID = 2;
	private Image background;
	private Image jouer;
	private Image niveau1;
	private Image niveau2;
	private Image niveau3;
	private Image niveau4;
	private Image niveau5;
	private Image niveau6;
	private Image niveau7;
	private Image niveau8;
	private Image niveau9;
	private Image niveau10;
	
	private StateBasedGame game;

	@Override
	public void init(GameContainer container, StateBasedGame game) throws SlickException {
		this.game = game;
		this.background = new Image("background.jpg");
		
		niveau1 = new Image("ressources/menu/niveaux/niveau1.jpg");
		niveau2 = new Image("ressources/menu/niveaux/niveau2.jpg");
		niveau3 = new Image("ressources/menu/niveaux/niveau3.jpg");
		niveau4 = new Image("ressources/menu/niveaux/niveau4.jpg");
		niveau5 = new Image("ressources/menu/niveaux/niveau5.jpg");
		niveau6 = new Image("ressources/menu/niveaux/niveau6.jpg");
		niveau7 = new Image("ressources/menu/niveaux/niveau7.jpg");
		niveau8 = new Image("ressources/menu/niveaux/niveau8.jpg");
		niveau9 = new Image("ressources/menu/niveaux/niveau9.jpg");
		niveau10 = new Image("ressources/menu/niveaux/niveau10.jpg");
	}

	/**
	 * Contenons nous d'afficher l'image de fond. Le text est placé
	 * approximativement au centre.
	 */

	@Override
	public void render(GameContainer container, StateBasedGame game, Graphics g) throws SlickException {
		background.draw(0, 0, container.getWidth(), container.getHeight());
		g.drawImage(niveau1, 400, 300);
		g.drawImage(niveau2, 600, 300);
		g.drawImage(niveau3, 800, 300);
		g.drawImage(niveau4, 1000, 300);
		g.drawImage(niveau5, 1200, 300);
		//g.drawImage(niveaux, container.getWidth() / 2 - 200, 400);
		//g.drawImage(options, container.getWidth() / 2 - 200, 550);
		//g.drawImage(credits, container.getWidth() / 2 - 200, 700);
		//g.drawImage(quitter, container.getWidth() / 2 - 200, 850);

	}

	@Override
	public void update(GameContainer container, StateBasedGame game, int delta) throws SlickException {
	}

	@Override
	public void mouseClicked(int button, int x, int y, int clickCount) {
	    if (x > this.game.getContainer().getWidth() / 2 - 200 && x < this.game.getContainer().getWidth() / 2 + 200
			&& y > 250 && y < 340) {
		    game.enterState(0);
		    // Remove l'ancien state et le replace pour un nouveau pour reset
		    // l'état du lvl
		}
		
		// Menu - niveau
		if (x > this.game.getContainer().getWidth() / 2 - 200 && x < this.game.getContainer().getWidth() / 2 + 200
			&& y > 400 && y < 490) {
		    System.exit(0); //TODO Faire game states
		}

		// Menu - options
		if (x > this.game.getContainer().getWidth() / 2 - 200 && x < this.game.getContainer().getWidth() / 2 + 200
			&& y > 550 && y < 640) {
		    System.exit(0);
		}
		
		// Menu - credits
		if (x > this.game.getContainer().getWidth() / 2 - 200 && x < this.game.getContainer().getWidth() / 2 + 200
			&& y > 700 && y < 790) {
		    System.exit(0);
		}
		
		// Menu - quitter
		if (x > this.game.getContainer().getWidth() / 2 - 200 && x < this.game.getContainer().getWidth() / 2 + 200
			&& y > 850 && y < 940) {
		    System.exit(0);
		}
	}

	/**
	 * L'identifiant permet d'identifier les différentes boucles. Pour passer de
	 * l'une à l'autre.
	 */
	@Override
	public int getID() {
		return ID;
	}

}